# Gopkg.toml example
#
# Refer to https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md
# for detailed Gopkg.toml documentation.
#
# required = ["github.com/user/thing/cmd/thing"]
# ignored = ["github.com/user/project/pkgX", "bitbucket.org/user/project/pkgA/pkgY"]
#
# [[constraint]]
#   name = "github.com/user/project"
#   version = "1.0.0"
#
# [[constraint]]
#   name = "github.com/user/project2"
#   branch = "dev"
#   source = "github.com/myfork/project2"
#
# [[override]]
#   name = "github.com/x/y"
#   version = "2.4.0"
#
# [prune]
#   non-go = false
#   go-tests = true
#   unused-packages = true

# FIXME(neeraj): Hacky workaround by including "k8s.io/code-generator/cmd/client-gen"
# instead of "k8s.io/code-generator". There's bug in dep where if root of the
# required package doesn't contain Go code it won't let you require it.
# https://github.com/kubernetes/sample-controller/issues/6
required = [
  "k8s.io/code-generator/cmd/client-gen"
]

[[constraint]]
  name = "istio.io/api"
  branch = "master"

[[constraint]]
  name = "k8s.io/apimachinery"
  branch = "master"

[[constraint]]
  name = "k8s.io/client-go"
  branch = "master"

[prune]
  non-go = true
  go-tests = true
  unused-packages = true

[[prune.project]]
  name = "k8s.io/code-generator"
  unused-packages = false
  non-go = false
  go-tests = false

[[prune.project]]
  name = "k8s.io/gengo"
  unused-packages = false
  non-go = false
  go-tests = false
